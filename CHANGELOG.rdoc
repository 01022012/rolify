= 0.7
* added a method_missing to catch newly created role outside the current ruby process (i.e. dynamic shortcut methods are not defined within this process) 
  * dynamic shortcut is created on the fly in the method_missing to avoid extra method_missing for the same dynamic shortcut 
  * check if the role actually exists in the database before defining the new method 
  * first call is slower due to method_missing but next calls are fast
  * avoid strange bugs when spawning many ruby processes as the dynamic shortcut methods were only defined in the process that used the <tt>has_role</tt> command

= 0.6
* custom User and Role class names support
  * can now use other class names for Role and User classes
  * fixed generators and templates 
  * join table is explicitly set to avoid alphabetical order issue
* created a new railtie to load the dynamic shortcuts at startup

= 0.5.1
* fixed a nasty typo on a variable name and added a spec to make this never happen again

= 0.5
* dynamic shortcuts support
  * creates automatically new methods upon new role creation (or at startup for a Rails app)
  * <tt>has_role "admin"</tt> will create a method called <tt>is_admin?</tt>
  * <tt>has_role "moderator", Forum.first</tt> will create 2 methods:
     * <tt>is_moderator_of?(resource)</tt>
     * <tt>is_moderator?</tt>

= v0.4
* removing role support
  * <tt>has_no_role</tt> removes a global role or a role scoped to a resource
  * Please note that trying to remove a global role whereas the user a role with the same name on a resource will remove that scoped role
  * Trying to remove a role scoped to a resource whereas the user has a global role won't remove it

= v0.3
* multiple roles check: 
  * <tt>has_all_roles?</tt> returns true if the user has ALL the roles in arguments
  * <tt>has_any_role?</tt> returns true if the user has ANY the roles in arguments

= v0.2
* fixed the generator to include the lib
* fixed the migration file with missing polymorphic field
* added some examples in documentation

= v0.1
* first release
